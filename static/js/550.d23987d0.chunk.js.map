{"version":3,"file":"static/js/550.d23987d0.chunk.js","mappings":"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","sources":["components/NoInfo/NoInfo.styled.jsx","components/ReviewsList/ReviewsList.styled.jsx","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx","hooks/useReviews.js","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const NoInfo = styled.p`\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.l};\n\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin-bottom: ${props => props.theme.space[5]}px;\n  padding: ${props => props.theme.space[3]}px;\n\n  border-radius: ${props => props.theme.radii.normal};\n  box-shadow: ${props => props.theme.shadows.second};\n\n  list-style: none;\n`;\n\nexport const Author = styled.p`\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.m};\n  margin-bottom: ${props => props.theme.space[3]}px;\n`;\n\nexport const Content = styled.p`\n  font-family: ${props => props.theme.fonts.body};\n  font-size: ${props => props.theme.fontSizes.s};\n  color: ${props => props.theme.colors.primaryText};\n\n  text-indent: ${props => props.theme.space[5]}px;\n  text-align: justify;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Author, Content } from './ReviewsList.styled';\n\nconst ReviewsList = ({ ReviewsInfo }) => {\n  return (\n    <ul>\n      {ReviewsInfo.map(({ id, author, content }) => {\n        return (\n          <Item key={id}>\n            <Author>{`Author: ${author}`}</Author>\n            <Content>{content}</Content>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\n\nReviewsList.propTypes = {\n  ReviewsInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n};\n\nexport default ReviewsList;\n","// import { useState, useEffect, useRef } from 'react';\n// import { useParams } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useReviews } from 'hooks/useReviews';\nimport ReviewsList from 'components/ReviewsList';\n// import { fetchMovies } from 'services/fetchMovies';\nimport { Container } from 'components/Container';\nimport { NoInfo } from 'components/NoInfo/';\n\nconst Reviews = () => {\n  // const [reviews, setReviews] = useState([]);\n  // const [loaded, setLoaded] = useState(false);\n  // const [error, setError] = useState(null);\n  // const { movieId } = useParams();\n\n  // const isFirstRender = useRef(true);\n\n  // useEffect(() => {\n  //   const fetch = async () => {\n  //     try {\n  //       if (isFirstRender.current) {\n  //         isFirstRender.current = false;\n  //         return;\n  //       }\n\n  //       setLoaded(true);\n\n  //       const dataReviewsMovie = await fetchMovies(\n  //         `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=084c550b6f1767443109bcf4bcaee21b&language=en-US`\n  //       );\n\n  //       const dataReviews = dataReviewsMovie.results;\n\n  //       setReviews([...dataReviews]);\n  //     } catch (error) {\n  //       console.log(error.message);\n  //       setError(error);\n  //     } finally {\n  //       setLoaded(false);\n  //     }\n  //   };\n\n  //   fetch();\n  // }, [movieId]);\n\n  const { reviews, loaded, error } = useReviews();\n\n  return (\n    <section>\n      <Container>\n        {reviews && reviews.length > 0 && <ReviewsList ReviewsInfo={reviews} />}\n\n        {reviews && reviews.length === 0 && (\n          <NoInfo>We don`t have any reviews for this movie.</NoInfo>\n        )}\n\n        {error && <NoInfo>Something wrong. Try again later.</NoInfo>}\n\n        {loaded && (\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"blue\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{ justifyContent: 'center' }}\n            visible={true}\n          />\n        )}\n      </Container>\n    </section>\n  );\n};\n\nexport default Reviews;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/fetchMovies';\n\nexport const useReviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        if (isFirstRender.current) {\n          isFirstRender.current = false;\n          return;\n        }\n\n        setLoaded(true);\n\n        const dataReviewsMovie = await fetchMovies(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=084c550b6f1767443109bcf4bcaee21b&language=en-US`\n        );\n\n        const dataReviews = dataReviewsMovie.results;\n\n        setReviews([...dataReviews]);\n      } catch (error) {\n        console.log(error.message);\n        setError(error);\n      } finally {\n        setLoaded(false);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return { reviews, loaded, error };\n};\n","import axios from 'axios';\n\nexport const fetchMovies = async url => {\n  const response = await axios.get(url);\n\n  return response.data;\n};\n"],"names":["NoInfo","styled","props","theme","fonts","heading","fontWeights","fontSizes","l","Item","space","radii","normal","shadows","second","Author","m","Content","body","s","colors","primaryText","ReviewsInfo","map","id","author","content","useState","reviews","setReviews","loaded","setLoaded","error","setError","movieId","useParams","isFirstRender","useRef","useEffect","fetch","current","fetchMovies","dataReviewsMovie","dataReviews","results","console","log","message","useReviews","Container","length","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","visible","url","axios","response","data"],"sourceRoot":""}
{"version":3,"file":"static/js/679.6f578028.chunk.js","mappings":"wQA2BA,EAzBoB,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,YACrB,OACE,wBACGA,EAAYC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,2BACE,yCAAeD,MACf,uBAAIC,MAFGF,EAKZ,KAGN,E,SC8CD,EAvDgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA0BR,OAxBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,sGAEVN,GAAU,GAFA,UAIqBO,EAAAA,EAAAA,GAAY,sCAAD,OACFJ,EADE,qEAJhC,OAIJK,EAJI,OAQJC,EAAcD,EAAiBE,QAErCZ,GAAW,OAAIW,IAVL,gDAYVE,QAAQC,IAAI,KAAMC,SAClBX,EAAS,EAAD,IAbE,yBAeVF,GAAU,GAfA,4EAAH,qDAmBXM,GACD,GAAE,CAACH,IAEJQ,QAAQC,IAAIf,IAEV,2BACGA,EAAQiB,OAAS,GAChB,SAAC,EAAD,CAAavB,YAAaM,KAE1B,qEAGDI,IAAS,6DAETF,IACC,SAAC,KAAD,CACEgB,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,OACNC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,UAChCC,SAAS,MAKlB,C,8FCzDYf,EAAW,mCAAG,WAAMgB,GAAN,uFACFC,EAAAA,EAAAA,IAAUD,GADR,cACnBE,EADmB,yBAGlBA,EAASC,MAHS,2CAAH,qD","sources":["components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx","services/fetchMovies.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ReviewsList = ({ ReviewsInfo }) => {\n  return (\n    <ul>\n      {ReviewsInfo.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <p>{`Author: ${author}`}</p>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nReviewsList.propTypes = {\n  ReviewsInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ReviewsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\nimport ReviewsList from 'components/ReviewsList';\nimport { fetchMovies } from 'services/fetchMovies';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoaded(true);\n\n        const dataReviewsMovie = await fetchMovies(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=084c550b6f1767443109bcf4bcaee21b&language=en-US`\n        );\n\n        const dataReviews = dataReviewsMovie.results;\n\n        setReviews([...dataReviews]);\n      } catch (error) {\n        console.log(error.message);\n        setError(error);\n      } finally {\n        setLoaded(false);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  console.log(reviews);\n  return (\n    <div>\n      {reviews.length > 1 ? (\n        <ReviewsList ReviewsInfo={reviews} />\n      ) : (\n        <p>We don`t have any reviews for this movie.</p>\n      )}\n\n      {error && <p>Something wrong. Try again later.</p>}\n\n      {loaded && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"blue\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{ justifyContent: 'center' }}\n          visible={true}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nexport const fetchMovies = async url => {\n  const response = await axios.get(url);\n\n  return response.data;\n};\n"],"names":["ReviewsInfo","map","id","author","content","useState","reviews","setReviews","loaded","setLoaded","error","setError","movieId","useParams","useEffect","fetch","fetchMovies","dataReviewsMovie","dataReviews","results","console","log","message","length","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","visible","url","axios","response","data"],"sourceRoot":""}
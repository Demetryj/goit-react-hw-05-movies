{"version":3,"file":"static/js/642.6adb979d.chunk.js","mappings":"sLAEaA,E,QAASC,GAAAA,EAAH,8GACF,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,OAAtB,IACL,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAYD,OAA5B,IACP,SAAAH,GAAK,OAAIA,EAAMC,MAAMI,UAAUC,CAA1B,G,kLC4CpB,EAvCmB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpB,OACE,+BACE,SAACC,EAAD,UACGD,EAAWE,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACtC,OACE,UAACC,EAAD,YACE,SAACC,EAAD,WACE,gBACEC,IACEH,EAAY,0CAC2BA,GACnCI,EAENC,IAAKP,OAIT,SAACQ,EAAD,UAAYR,IACXC,IAAa,SAACQ,EAAD,UAAYR,MAbjBF,EAgBd,OAIR,E,mBClCYF,EAAOT,EAAAA,GAAAA,GAAH,+KAIS,SAAAC,GAAK,OAAIA,EAAMC,MAAMoB,MAAM,EAAtB,IACJ,SAAArB,GAAK,OAAIA,EAAMC,MAAMoB,MAAM,EAAtB,IACf,SAAArB,GAAK,OAAIA,EAAMC,MAAMoB,MAAM,EAAtB,IAGTP,EAAOf,EAAAA,GAAAA,GAAH,0SACD,SAAAC,GAAK,OAAIA,EAAMC,MAAMoB,MAAM,EAAtB,IACJ,SAAArB,GAAK,OAAIA,EAAMC,MAAMoB,MAAM,EAAtB,IACL,SAAArB,GAAK,OAAIA,EAAMC,MAAMoB,MAAM,EAAtB,IACF,SAAArB,GAAK,OAAIA,EAAMC,MAAMoB,MAAM,EAAtB,IACO,SAAArB,GAAK,OAAIA,EAAMC,MAAMoB,MAAM,EAAtB,IAIX,SAAArB,GAAK,OAAIA,EAAMC,MAAMqB,OAAOC,WAAvB,IACF,SAAAvB,GAAK,OAAIA,EAAMC,MAAMqB,OAAOC,WAAvB,IAQrBR,EAAahB,EAAAA,GAAAA,IAAH,qFAIJ,SAAAC,GAAK,OAAIA,EAAMC,MAAMoB,MAAM,EAAtB,IAGXF,EAAYpB,EAAAA,GAAAA,EAAH,gHACL,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,MAAMsB,IAAtB,IACL,SAAAxB,GAAK,OAAIA,EAAMC,MAAMG,YAAYD,OAA5B,IACP,SAAAH,GAAK,OAAIA,EAAMC,MAAMI,UAAUoB,CAA1B,IACD,SAAAzB,GAAK,OAAIA,EAAMC,MAAMoB,MAAM,EAAtB,IAGXD,EAAYrB,EAAAA,GAAAA,EAAH,0DACP,SAAAC,GAAK,OAAIA,EAAMC,MAAMI,UAAUqB,EAA1B,IACT,SAAA1B,GAAK,OAAIA,EAAMC,MAAMqB,OAAOK,WAAvB,I,oBC+BhB,EAnEa,WAoCX,MCzCqB,WACrB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAyBR,OAvBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,sGAEVN,GAAU,GAFA,UAIoBO,EAAAA,EAAAA,GAAY,sCAAD,OACDJ,EADC,qEAJ/B,OAIJK,EAJI,OAQJC,EAAWD,EAAgBE,KAEjCZ,EAAUW,GAVA,gDAYVE,QAAQC,IAAI,KAAMC,SAClBX,EAAS,EAAD,IAbE,yBAeVF,GAAU,GAfA,4EAAH,qDAmBXM,GACD,GAAE,CAACH,IAEG,CAAEN,OAAAA,EAAQE,OAAAA,EAAQE,MAAAA,EAC1B,CDWmCa,GAA1BjB,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,OAAQE,EAAxB,EAAwBA,MAExB,OACE,8BACE,UAACc,EAAA,EAAD,WACGlB,GAAUA,EAAOmB,OAAS,IAAK,SAAC,EAAD,CAAYzC,WAAYsB,IAEvDA,GAA4B,IAAlBA,EAAOmB,SAChB,SAAClD,EAAA,EAAD,yEAKDmC,IAAS,SAACnC,EAAA,EAAD,gDAETiC,IACC,SAAC,KAAD,CACEkB,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,OACNC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,UAChCC,SAAS,QAMpB,C,kGExEYjB,EAAW,mCAAG,WAAMkB,GAAN,uFACFC,EAAAA,EAAAA,IAAUD,GADR,cACnBE,EADmB,yBAGlBA,EAASC,MAHS,2CAAH,qD","sources":["components/NoInfo/NoInfo.styled.jsx","components/ActorsList/ActorsList.jsx","components/ActorsList/ActorList.styled.jsx","pages/Cast/Cast.jsx","hooks/useCast.js","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const NoInfo = styled.p`\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.l};\n\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport image from 'images/no-image-icon.jpg';\nimport {\n  List,\n  Item,\n  WrapperImg,\n  ActorName,\n  Character,\n} from 'components/ActorsList';\n\nconst ActorsList = ({ actorsInfo }) => {\n  return (\n    <>\n      <List>\n        {actorsInfo.map(({ id, name, character, profile_path }) => {\n          return (\n            <Item key={id}>\n              <WrapperImg>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : image\n                  }\n                  alt={name}\n                />\n              </WrapperImg>\n\n              <ActorName>{name}</ActorName>\n              {character && <Character>{character}</Character>}\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nActorsList.propTypes = {\n  actorsInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      character: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default ActorsList;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: calc(-1 * ${props => props.theme.space[4]}px);\n  margin-left: calc(-1 * ${props => props.theme.space[4]}px);\n  padding-top: ${props => props.theme.space[4]}px;\n`;\n\nexport const Item = styled.li`\n  margin-top: ${props => props.theme.space[4]}px;\n  margin-left: ${props => props.theme.space[4]}px;\n  padding-top: ${props => props.theme.space[2]}px;\n  padding-bottom: ${props => props.theme.space[2]}px;\n  flex-basis: calc(100% / 7 - ${props => props.theme.space[4]}px);\n\n  list-style: none;\n\n  border-top: 2px solid ${props => props.theme.colors.borderColor};\n  border-bottom: 2px solid ${props => props.theme.colors.borderColor};\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const WrapperImg = styled.div`\n  width: 100%;\n  height: 210px;\n\n  margin-bottom: ${props => props.theme.space[2]}px;\n`;\n\nexport const ActorName = styled.p`\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.s};\n  margin-bottom: ${props => props.theme.space[2]}px; ;\n`;\n\nexport const Character = styled.p`\n  font-size: ${props => props.theme.fontSizes.xs};\n  color: ${props => props.theme.colors.primaryText};\n`;\n","// import { useState, useEffect, useRef } from 'react';\n// import { useParams } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useCast } from 'hooks/useCast';\nimport ActorsList from 'components/ActorsList';\n// import { fetchMovies } from 'services/fetchMovies';\nimport { Container } from 'components/Container';\nimport { NoInfo } from 'components/NoInfo/';\n\nconst Cast = () => {\n  // const [actors, setActors] = useState([]);\n  // const [loaded, setLoaded] = useState(false);\n  // const [error, setError] = useState(null);\n  // const { movieId } = useParams();\n\n  // const isFirstRender = useRef(true);\n\n  // useEffect(() => {\n  //   const fetch = async () => {\n  //     try {\n  //       if (isFirstRender.current) {\n  //         isFirstRender.current = false;\n  //         return;\n  //       }\n\n  //       setLoaded(true);\n\n  //       const dataActorsMovie = await fetchMovies(\n  //         `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=084c550b6f1767443109bcf4bcaee21b&language=en-US`\n  //       );\n\n  //       const dataCast = dataActorsMovie.cast;\n\n  //       setActors([...dataCast]);\n  //     } catch (error) {\n  //       console.log(error.message);\n  //       setError(error);\n  //     } finally {\n  //       setLoaded(false);\n  //     }\n  //   };\n\n  //   fetch();\n  // }, [movieId]);\n\n  const { actors, loaded, error } = useCast();\n\n  return (\n    <section>\n      <Container>\n        {actors && actors.length > 0 && <ActorsList actorsInfo={actors} />}\n\n        {actors && actors.length === 0 && (\n          <NoInfo>\n            We don't have any information about actors for this movie.\n          </NoInfo>\n        )}\n\n        {error && <NoInfo>Something wrong. Try again later.</NoInfo>}\n\n        {loaded && (\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"blue\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{ justifyContent: 'center' }}\n            visible={true}\n          />\n        )}\n      </Container>\n    </section>\n  );\n};\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/fetchMovies';\n\nexport const useCast = () => {\n  const [actors, setActors] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoaded(true);\n\n        const dataActorsMovie = await fetchMovies(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=084c550b6f1767443109bcf4bcaee21b&language=en-US`\n        );\n\n        const dataCast = dataActorsMovie.cast;\n\n        setActors(dataCast);\n      } catch (error) {\n        console.log(error.message);\n        setError(error);\n      } finally {\n        setLoaded(false);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return { actors, loaded, error };\n};\n","import axios from 'axios';\n\nexport const fetchMovies = async url => {\n  const response = await axios.get(url);\n\n  return response.data;\n};\n"],"names":["NoInfo","styled","props","theme","fonts","heading","fontWeights","fontSizes","l","actorsInfo","List","map","id","name","character","profile_path","Item","WrapperImg","src","image","alt","ActorName","Character","space","colors","borderColor","body","s","xs","primaryText","useState","actors","setActors","loaded","setLoaded","error","setError","movieId","useParams","useEffect","fetch","fetchMovies","dataActorsMovie","dataCast","cast","console","log","message","useCast","Container","length","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","visible","url","axios","response","data"],"sourceRoot":""}
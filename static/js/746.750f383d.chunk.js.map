{"version":3,"file":"static/js/746.750f383d.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/Box.jsx","components/MoviesList/MoviesItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesItem.styled.jsx","components/NoInfo/NoInfo.styled.jsx","components/TrendingTodayMovies/TrendingTodayMovies.styled.jsx","components/TrendingTodayMovies/TrendingTodayMovies.jsx","hooks/useTrendingTodayMovies.js","pages/Home/Home.jsx","services/fetchMovies.js"],"sourcesContent":["import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MoviesItem, List, Item, LinkItem } from 'components/MoviesList';\n\nconst MoviesList = ({ movies, linkTo = false }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => {\n        return (\n          <Item key={movie.id}>\n            {linkTo ? (\n              <LinkItem to={`${linkTo}/${movie.id}`} state={{ from: location }}>\n                <MoviesItem {...movie} />\n              </LinkItem>\n            ) : (\n              <LinkItem to={`${movie.id}`} state={{ from: location }}>\n                <MoviesItem {...movie} />\n              </LinkItem>\n            )}\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nimport {\n  position,\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  shadow,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  position,\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  shadow\n);\n\nexport default Box;\n","import PropTypes from 'prop-types';\nimport image from 'images/no-image-icon.jpg';\nimport { Poster, MovieName } from 'components/MoviesList';\nimport Box from 'components/Box';\n\nexport const MoviesItem = ({ poster_path, title, name }) => {\n  return (\n    <>\n      <Poster>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : image\n          }\n          alt={title ? title : name}\n        />\n      </Poster>\n\n      <Box as=\"div\" p={[2]}>\n        <MovieName>{title ? title : name}</MovieName>\n      </Box>\n    </>\n  );\n};\n\nMoviesItem.propStyles = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: calc(-1 * ${props => props.theme.space[5]}px);\n  margin-left: calc(-1 * ${props => props.theme.space[5]}px);\n`;\n\nexport const Item = styled.li`\n  margin-top: ${props => props.theme.space[5]}px;\n  margin-left: ${props => props.theme.space[5]}px;\n  flex-basis: calc(100% / 5 - ${props => props.theme.space[5]}px);\n\n  overflow: hidden;\n\n  list-style: none;\n  border-radius: ${props => props.theme.radii.normal};\n  box-shadow: ${props => props.theme.shadows.first};\n\n  transform: scale(1);\n  transition: box-shadow 250ms, transform 250ms;\n\n  :hover,\n  :focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const LinkItem = styled(Link)`\n  display: block;\n  height: 100%;\n\n  text-decoration: none;\n`;\n","import styled from 'styled-components';\n\nexport const Poster = styled.div`\n  height: 300px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const MovieName = styled.p`\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.body};\n  font-size: ${props => props.theme.fontSizes.xs};\n  color: ${props => props.theme.colors.movieNameColor};\n`;\n","import styled from 'styled-components';\n\nexport const NoInfo = styled.p`\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.l};\n\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-bottom: ${props => props.theme.space[4]}px;\n\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.xl};\n\n  color: ${props => props.theme.colors.primaryText};\n\n  text-align: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { useTrendingTodayMovies } from 'hooks/useTrendingTodayMovies';\nimport MoviesList from 'components/MoviesList';\nimport { NoInfo } from 'components/NoInfo';\nimport { Title } from './TrendingTodayMovies.styled';\n\nconst TrendingTodayMovies = () => {\n  const { moviesTrending, loaded, error } = useTrendingTodayMovies();\n\n  return (\n    <>\n      <Title>Trending today</Title>\n\n      {moviesTrending.length > 1 && (\n        <MoviesList movies={moviesTrending} linkTo=\"movies\" />\n      )}\n      {/* мається на увазі, що буде NavLink to=\"movies/:movieId\".\n       Тобто  <NavLink to={`${linkTo}/${movie.id}`}> у компоненті MovieList*/}\n\n      {error && <NoInfo>Something wrong. Try again later.</NoInfo>}\n\n      {loaded && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"blue\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{ justifyContent: 'center' }}\n          visible={true}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TrendingTodayMovies;\n","import { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/fetchMovies';\n\nexport const useTrendingTodayMovies = () => {\n  const [moviesTrending, setMoviesTrending] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n       \n\n        setLoaded(true);\n\n        const dataMovies = await fetchMovies(\n          'https://api.themoviedb.org/3/trending/all/day?api_key=084c550b6f1767443109bcf4bcaee21b'\n        );\n\n        const movies = dataMovies.results;\n\n        setMoviesTrending([...movies]);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setLoaded(false);\n      }\n    };\n    fetch();\n  }, []);\n\n  return { moviesTrending, loaded, error };\n};\n","import TrendingTodayMovies from 'components/TrendingTodayMovies';\nimport { Container } from 'components/Container';\n\nconst Home = () => {\n  return (\n    <main>\n      <section>\n        <Container>\n          <TrendingTodayMovies />\n        </Container>\n      </section>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nexport const fetchMovies = async url => {\n  const response = await axios.get(url);\n\n  return response.data;\n};\n"],"names":["movies","linkTo","location","useLocation","List","map","movie","Item","LinkItem","to","id","state","from","MoviesItem","styled","position","color","space","layout","flexbox","border","shadow","poster_path","title","name","Poster","src","image","alt","as","p","MovieName","propStyles","PropTypes","props","theme","radii","normal","shadows","first","Link","fonts","body","fontWeights","fontSizes","xs","colors","movieNameColor","NoInfo","heading","l","Title","xl","primaryText","useState","moviesTrending","setMoviesTrending","loaded","setLoaded","error","setError","useEffect","fetch","fetchMovies","dataMovies","results","console","log","useTrendingTodayMovies","length","MoviesList","height","width","radius","ariaLabel","wrapperStyle","justifyContent","visible","Container","url","axios","response","data"],"sourceRoot":""}
{"version":3,"file":"static/js/159.2eef1d16.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/NoInfo/NoInfo.styled.jsx","services/getGenresForDetailsMovie.js","components/CardMovie/CardMovie.styled.jsx","components/CardMovie/CardMovie.jsx","services/getScore.js","services/getDateYear.js","pages/MovieDetails/MovieDetails.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n\n  padding-top: ${props => props.theme.space[4]}px;\n  padding-bottom: ${props => props.theme.space[5]}px;\n  padding-left: ${props => props.theme.space[4]}px;\n  padding-right: ${props => props.theme.space[4]}px;\n`;\n","import styled from 'styled-components';\n\nexport const NoInfo = styled.p`\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.l};\n\n  text-align: center;\n`;\n","export const getGenresForDetailsMovie = genresMovie => {\n  const nameGenres = genresMovie.map(genre => genre.name);\n\n  if (nameGenres.length === 0) {\n    return 'Other';\n  }\n\n  if (nameGenres.length > 3) {\n    return `${nameGenres[0]}, ${nameGenres[1]}, 'Others'`;\n  }\n\n  return nameGenres.join(', ');\n};\n","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const GoBackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.space[3]}px;\n\n  padding: ${props => props.theme.space[3]}px;\n  padding-left: ${props => props.theme.space[0]}px;\n\n  font-family: ${props => props.theme.fonts.body};\n\n  color: ${props => props.theme.colors.goBackLinkColor};\n\n  transition: color 250ms;\n\n  :hover,\n  :focus {\n    color: ${props => props.theme.colors.accentgoBackLink};\n  }\n\n  text-decoration: none;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: ${props => props.theme.space[4]}px;\n`;\n\nexport const ImageMovie = styled.img`\n  width: 250px;\n  height: 350px;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${props => props.theme.space[4]}px;\n`;\n\nexport const MovieName = styled.h2`\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.l};\n`;\n\nexport const Overview = styled.p`\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.m};\n`;\n\nexport const Text = styled.p`\n  font-family: ${props => props.theme.fonts.body};\n  font-size: ${props => props.theme.fontSizes.s};\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nexport const Genres = styled.p`\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.m};\n`;\n\nexport const AdditionalInfo = styled.p`\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.m};\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  display: flex;\n  list-style: none;\n`;\n\nexport const NavLinkItem = styled(NavLink)`\n  position: relative;\n  padding: ${props => props.theme.space[3]}px;\n\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.m};\n  text-decoration: none;\n\n  color: ${props => props.theme.colors.navLink};\n  transition: color 250ms;\n\n  &.active {\n    color: ${props => props.theme.colors.accent};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${props => props.theme.colors.accent};\n  }\n\n  :hover,\n  :focus {\n    text-decoration: underline;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport image from 'images/no-image-icon.jpg';\nimport { Container } from 'components/Container';\n\nimport { getDateYear } from 'services/getDateYear';\nimport { getScore } from 'services/getScore';\nimport {\n  Wrapper,\n  GoBackLink,\n  ImageMovie,\n  Info,\n  MovieName,\n  Text,\n  Overview,\n  Genres,\n  AdditionalInfo,\n  AdditionalInfoList,\n  NavLinkItem,\n} from './CardMovie.styled';\n\nconst CardMovie = ({\n  movie: {\n    title,\n    poster_path,\n    release_date = null,\n    vote_average = null,\n    overview,\n    genres,\n  },\n  getGenres,\n}) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <section>\n        <Container>\n          <GoBackLink to={location.state?.from ?? '/'}>\n            {/* <NavLink to={location.state?.from ?? \"/\"}>  вказувати альтернативний варіант шляху*/}\n            <HiArrowNarrowLeft />\n            <p>Go back</p>\n          </GoBackLink>\n          <Wrapper>\n            <ImageMovie\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : image\n              }\n              alt={title}\n              width=\"250\"\n            />\n\n            <Info>\n              <MovieName>\n                {release_date\n                  ? `${title} (${getDateYear(release_date)})`\n                  : title}\n              </MovieName>\n              <Text>\n                {vote_average\n                  ? `User Score: ${getScore(vote_average)}% `\n                  : 'User Score: no score'}\n              </Text>\n              <Overview>Overview</Overview>\n              <Text>{overview ? overview : 'No overview'}</Text>\n              <Genres>Genres</Genres>\n              <Text>{getGenres(genres)}</Text>\n\n              <Wrapper>\n                <AdditionalInfo>Additional information:</AdditionalInfo>\n                <AdditionalInfoList>\n                  <li>\n                    <NavLinkItem to=\"cast\">Cast,</NavLinkItem>\n                  </li>\n                  <li>\n                    <NavLinkItem to=\"reviews\">Reviews</NavLinkItem>\n                  </li>\n                </AdditionalInfoList>\n              </Wrapper>\n            </Info>\n          </Wrapper>\n        </Container>\n      </section>\n\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nCardMovie.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array.isRequired,\n  }).isRequired,\n  getGenres: PropTypes.func.isRequired,\n};\n\nexport default CardMovie;\n","export const getScore = value => Math.round(value) * 10;\n","export const getDateYear = date => new Date(date).getFullYear();\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { fetchMovies } from 'services/fetchMovies';\nimport { getGenresForDetailsMovie } from 'services/getGenresForDetailsMovie';\nimport CardMovie from 'components/CardMovie';\nimport { NoInfo } from 'components/NoInfo';\nimport { Container } from 'components/Container';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        if (isFirstRender.current) {\n          isFirstRender.current = false;\n          return;\n        }\n\n        setLoaded(true);\n\n        const dataMovie = await fetchMovies(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=084c550b6f1767443109bcf4bcaee21b&language=en`\n        );\n        console.log(dataMovie);\n        setMovie(dataMovie);\n      } catch (error) {\n        console.log(error.message);\n        setError(error);\n      } finally {\n        setLoaded(false);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return (\n    <main>\n      {movie && (\n        <CardMovie movie={movie} getGenres={getGenresForDetailsMovie} />\n      )}\n\n      {error && (\n        <Container>\n          <NoInfo>Something wrong. Try again later.</NoInfo>\n        </Container>\n      )}\n\n      {loaded && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"blue\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{ justifyContent: 'center' }}\n          visible={true}\n        />\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport const fetchMovies = async url => {\n  const response = await axios.get(url);\n\n  return response.data;\n};\n"],"names":["Container","styled","props","theme","space","NoInfo","fonts","heading","fontWeights","fontSizes","l","getGenresForDetailsMovie","genresMovie","nameGenres","map","genre","name","length","join","GoBackLink","Link","body","colors","goBackLinkColor","accentgoBackLink","Wrapper","ImageMovie","Info","MovieName","Overview","m","Text","s","primaryText","Genres","AdditionalInfo","AdditionalInfoList","NavLinkItem","NavLink","navLink","accent","value","date","movie","title","poster_path","release_date","vote_average","overview","genres","getGenres","location","useLocation","to","state","from","src","image","alt","width","Date","getFullYear","Math","round","Suspense","fallback","useState","setMovie","loaded","setLoaded","error","setError","movieId","useParams","isFirstRender","useRef","useEffect","fetch","current","fetchMovies","dataMovie","console","log","message","height","radius","color","ariaLabel","wrapperStyle","justifyContent","visible","url","axios","response","data"],"sourceRoot":""}
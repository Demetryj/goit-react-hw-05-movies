{"version":3,"file":"static/js/152.19b0a03e.chunk.js","mappings":"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","sources":["components/NoInfo/NoInfo.styled.jsx","services/getGenresForDetailsMovie.js","components/GoBackLink/GoBackLink.styled.jsx","components/CardMovie/CardMovie.styled.jsx","components/CardMovie/CardMovie.jsx","services/getScore.js","services/getDateYear.js","pages/MovieDetails/MovieDetails.jsx","hooks/useMovieDetails.js","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const NoInfo = styled.p`\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.l};\n\n  text-align: center;\n`;\n","export const getGenresForDetailsMovie = genresMovie => {\n  const nameGenres = genresMovie.map(genre => genre.name);\n\n  if (nameGenres.length === 0) {\n    return 'Other';\n  }\n\n  if (nameGenres.length > 3) {\n    return `${nameGenres[0]}, ${nameGenres[1]}, 'Others'`;\n  }\n\n  return nameGenres.join(', ');\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.space[3]}px;\n\n  margin-bottom: ${props => props.theme.space[3]}px;\n  padding-left: ${props => props.theme.space[0]}px;\n\n  font-family: ${props => props.theme.fonts.body};\n\n  color: ${props => props.theme.colors.goBackLinkColor};\n\n  transition: color 250ms;\n\n  :hover,\n  :focus {\n    color: ${props => props.theme.colors.accentgoBackLink};\n  }\n\n  text-decoration: none;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: ${props => props.theme.space[4]}px;\n`;\n\nexport const WrapperImage = styled.div`\n  width: 250px;\n  height: 350px;\n`;\n\nexport const ImageMovie = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${props => props.theme.space[4]}px;\n  flex-basis: calc(100% - 266px);\n`;\n\nexport const MovieName = styled.h1`\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.l};\n`;\n\nexport const Overview = styled.p`\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.m};\n`;\n\nexport const Text = styled.p`\n  font-family: ${props => props.theme.fonts.body};\n  font-size: ${props => props.theme.fontSizes.s};\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nexport const Genres = styled.p`\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.m};\n`;\n\nexport const AdditionalInfo = styled.p`\n  font-family: ${props => props.theme.fonts.body};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.m};\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  display: flex;\n  list-style: none;\n`;\n\nexport const NavLinkItem = styled(NavLink)`\n  position: relative;\n  padding: ${props => props.theme.space[3]}px;\n\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  font-size: ${props => props.theme.fontSizes.m};\n  text-decoration: none;\n\n  color: ${props => props.theme.colors.navLink};\n  transition: color 250ms;\n\n  &.active {\n    color: ${props => props.theme.colors.accent};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${props => props.theme.colors.accent};\n  }\n\n  :hover,\n  :focus {\n    text-decoration: underline;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport image from 'images/no-image-icon.jpg';\nimport { GoBackLink } from 'components/GoBackLink';\nimport { getDateYear } from 'services/getDateYear';\nimport { getScore } from 'services/getScore';\nimport {\n  Wrapper,\n  WrapperImage,\n  ImageMovie,\n  Info,\n  MovieName,\n  Text,\n  Overview,\n  Genres,\n  AdditionalInfo,\n  AdditionalInfoList,\n  NavLinkItem,\n} from './CardMovie.styled';\n\nconst CardMovie = ({\n  movie: {\n    title,\n    poster_path,\n    release_date = null,\n    vote_average = null,\n    overview,\n    genres,\n  },\n  getGenres,\n}) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <GoBackLink to={location.state?.from ?? '/'}>\n        {/* <NavLink to={location.state?.from ?? \"/\"}>  вказувати альтернативний варіант шляху*/}\n        <HiArrowNarrowLeft />\n        <p>Go back</p>\n      </GoBackLink>\n\n      <Wrapper>\n        <WrapperImage>\n          <ImageMovie\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : image\n            }\n            alt={title}\n          />\n        </WrapperImage>\n\n        <Info>\n          <MovieName>\n            {release_date ? `${title} (${getDateYear(release_date)})` : title}\n          </MovieName>\n          <Text>\n            {vote_average\n              ? `User Score: ${getScore(vote_average)}% `\n              : 'User Score: no score'}\n          </Text>\n          <Overview>Overview</Overview>\n          <Text>{overview ? overview : 'No overview'}</Text>\n          <Genres>Genres</Genres>\n          <Text>{getGenres(genres)}</Text>\n\n          <Wrapper>\n            <AdditionalInfo>Additional information:</AdditionalInfo>\n            <AdditionalInfoList>\n              <li>\n                {/* Передаємо пропсом state (властивість об'єкта місцезнаходження location), \n                  об'єкт з властивістю from, значення якого - це значення властивості from із об'єкта location,\n                   яки було бпередано у цей маршрут ('/movies/:movieId') за посиланням з маршруту '/movies', \n                   щоб при натисканні на посилання Go back повернутися із маршрута ('/movies/:movieId/cast')\n                   або ('/movies/:movieId/reviews) на маршрут '/movies'*/}\n                <NavLinkItem to=\"cast\" state={{ from: location.state.from }}>\n                  Cast\n                </NavLinkItem>\n              </li>\n              <li>\n                <NavLinkItem to=\"reviews\" state={{ from: location.state.from }}>\n                  Reviews\n                </NavLinkItem>\n              </li>\n            </AdditionalInfoList>\n          </Wrapper>\n        </Info>\n      </Wrapper>\n    </>\n  );\n};\n\nCardMovie.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array.isRequired,\n  }).isRequired,\n  getGenres: PropTypes.func.isRequired,\n};\n\nexport default CardMovie;\n","export const getScore = value => Math.round(value) * 10;\n","export const getDateYear = date => new Date(date).getFullYear();\n","// import { useState, useEffect, useRef } from 'react';\n// import { useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\n// import { fetchMovies } from 'services/fetchMovies';\nimport { useMovieDetails } from 'hooks/useMovieDetails';\nimport { getGenresForDetailsMovie } from 'services/getGenresForDetailsMovie';\nimport CardMovie from 'components/CardMovie';\nimport { NoInfo } from 'components/NoInfo';\nimport { Container } from 'components/Container';\n\nconst MovieDetails = () => {\n  // const [movie, setMovie] = useState(null);\n  // const [loaded, setLoaded] = useState(false);\n  // const [error, setError] = useState(null);\n  // const { movieId } = useParams();\n\n  // const isFirstRender = useRef(true);\n\n  // useEffect(() => {\n  //   const fetch = async () => {\n  //     try {\n  //       if (isFirstRender.current) {\n  //         isFirstRender.current = false;\n  //         return;\n  //       }\n\n  //       setLoaded(true);\n\n  //       const dataMovie = await fetchMovies(\n  //         `https://api.themoviedb.org/3/movie/${movieId}?api_key=084c550b6f1767443109bcf4bcaee21b&language=en`\n  //       );\n  //       console.log(dataMovie);\n  //       setMovie(dataMovie);\n  //     } catch (error) {\n  //       console.log(error.message);\n  //       setError(error);\n  //     } finally {\n  //       setLoaded(false);\n  //     }\n  //   };\n\n  //   fetch();\n  // }, [movieId]);\n\n  const { movie, loaded, error } = useMovieDetails();\n\n  return (\n    <main>\n      <section>\n        <Container>\n          {movie && (\n            <CardMovie movie={movie} getGenres={getGenresForDetailsMovie} />\n          )}\n\n          {error && (\n            <Container>\n              <NoInfo>Something wrong. Try again later.</NoInfo>\n            </Container>\n          )}\n\n          {loaded && (\n            <ThreeDots\n              height=\"80\"\n              width=\"80\"\n              radius=\"9\"\n              color=\"blue\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{ justifyContent: 'center' }}\n              visible={true}\n            />\n          )}\n        </Container>\n      </section>\n\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/fetchMovies';\n\nexport const useMovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  // const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        // if (isFirstRender.current) {\n        //   isFirstRender.current = false;\n        //   return;\n        // }\n\n        setLoaded(true);\n\n        const dataMovie = await fetchMovies(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=084c550b6f1767443109bcf4bcaee21b&language=en`\n        );\n\n        setMovie(dataMovie);\n      } catch (error) {\n        console.log(error.message);\n        setError(error);\n      } finally {\n        setLoaded(false);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return { movie, loaded, error };\n};\n","import axios from 'axios';\n\nexport const fetchMovies = async url => {\n  const response = await axios.get(url);\n\n  return response.data;\n};\n"],"names":["NoInfo","styled","props","theme","fonts","heading","fontWeights","fontSizes","l","getGenresForDetailsMovie","genresMovie","nameGenres","map","genre","name","length","join","GoBackLink","Link","space","body","colors","goBackLinkColor","accentgoBackLink","Wrapper","WrapperImage","ImageMovie","Info","MovieName","Overview","m","Text","s","primaryText","Genres","AdditionalInfo","AdditionalInfoList","NavLinkItem","NavLink","navLink","accent","value","date","movie","title","poster_path","release_date","vote_average","overview","genres","getGenres","location","useLocation","to","state","from","src","image","alt","Date","getFullYear","Math","round","useState","setMovie","loaded","setLoaded","error","setError","movieId","useParams","useEffect","fetch","fetchMovies","dataMovie","console","log","message","useMovieDetails","Container","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","visible","Suspense","fallback","url","axios","response","data"],"sourceRoot":""}